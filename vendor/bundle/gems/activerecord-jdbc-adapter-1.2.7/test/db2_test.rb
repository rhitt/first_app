require 'test_helper'
require 'arjdbc/db2'

class DB2Test < Test::Unit::TestCase
  
  def setup
    @adapter = Object.new
    def @adapter.zos?; false; end
    @adapter.extend ArJdbc::DB2
    
    @column = Object.new
    class << @column
      attr_accessor :type
    end
  end

  test 'quotes decimal column' do
    adapter, column = new_adapter_stub, new_column_stub
    assert_equal %q{'123.45'}, adapter.quote("123.45")
    column.type = :decimal
    assert_equal %q{123.45}, adapter.quote("123.45", column), "decimal columns should not have quotes"
  end

  test 'generated primary key' do
    adapter = new_adapter_stub
    assert_equal 'int not null generated by default as identity (start with 1) primary key', 
      adapter.modify_types({:string => {}, :integer => {}, :boolean => {}})[:primary_key]
  end
  
  test 'selects correct schema' do
    url = 'jdbc:as400://localhost/schema;naming=system;libraries=lib1,lib2'
    assert_equal 'schema', new_adapter_stub(:url => url).send(:db2_schema)
    
    url = 'jdbc:as400://127.0.0.1/SCHEMA1 '
    assert_equal 'SCHEMA1', new_adapter_stub(:url => url).send(:db2_schema)
    
    url = 'jdbc:as400://127.0.0.1/SCHEMA2;'
    assert_equal 'SCHEMA2', new_adapter_stub(:url => url).send(:db2_schema)

    assert_equal nil, new_adapter_stub(:jndi => 'java:comp/env/DB2DS').send(:db2_schema)
    
    config = { :host => 'localhost', :username => 'db2inst1' }
    assert_equal 'db2inst1', new_adapter_stub(config).send(:db2_schema)
  end
  
  test 'quote column name returns string' do
    adapter = new_adapter_stub
    assert_equal 'version', adapter.quote_column_name(:version)
    assert_equal 'column1', adapter.quote_column_name("column1")
  end
  
  private
  
  def new_adapter_stub(config = {})
    config = config.merge({ :adapter => 'jdbc', :adapter_spec => ArJdbc::DB2 })
    connection = stub('connection'); logger = nil
    connection.stub_everything
    adapter = ActiveRecord::ConnectionAdapters::JdbcAdapter.new connection, logger, config
    def adapter.zos?; false; end
    adapter
  end

  def new_column_stub
    column = Object.new
    class << column
      attr_accessor :type
    end
    column
  end
  
end